@model WebAppIniciativa.Models.SolicitudIniciativa

@{
    ViewBag.Title = "Solicitud Iniciativa";
    Layout = "~/Views/Shared/_comunLayout.cshtml";
    int año = DateTime.Now.Year;
    int codCli = (int)Session["codCli"];
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <script src="~/Scripts/jquery-3.3.1.js" type="text/javascript"></script>
</head>

<body>
    <h2>Solicitud de Iniciativa</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.nroCorrelativo, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.nroCorrelativo, new { htmlAttributes = new {@disabled="disabled" ,@class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nroCorrelativo, "", new { @class = "text-danger" })


        </div>
        @Html.Hidden("codCli",codCli)
        
        <div class="form-group">
            @Html.LabelFor(model => model.codEje, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.DropDownList("codEje", (SelectList)ViewBag.ejes)

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.codReq, htmlAttributes: new { @class = "control-label col-md-2" })

            <select id="codReq" name="codReq" class="form-control"></select>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nomIni, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.nomIni, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nomIni, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.desIni, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.desIni, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.desIni, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.objIni, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.objIni, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.objIni, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.benIni, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.benIni, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.benIni, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.codImp, htmlAttributes: new { @class = "control-label col-md-2" })

            <select name="codImp">
                <option value="1">Critico - Ejecución inmediata</option>
                <option value="2">Alto-Ejecución @año</option>
                <option value="3">Medio-Ejecución @(año + 1)</option>
                <option value="4">Bajo-Ejecución @(año + 2)</option>

            </select>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.desImp, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.desImp, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.desImp, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fecIni, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.DropDownList("fecIni", (SelectList)ViewBag.fecIni)

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fecTer, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.DropDownList("fecTer", (SelectList)ViewBag.fecTer)

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.codGer, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.DropDownList("codGer", (SelectList)ViewBag.ger)

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.codJef, htmlAttributes: new { @class = "control-label col-md-2" })

            <select id="codJef" name="codJef" class="form-control"></select>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.codCap, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.DropDownList("codCap", (SelectList)ViewBag.capa)

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ubicacion, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.ubicacion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ubicacion, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.codTip, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.DropDownList("codTip", (SelectList)ViewBag.tini)

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.desTip, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.desTip, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.desTip, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.codAne, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.DropDownList("codAne", (SelectList)ViewBag.ane)

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.desAne, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.desAne, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.desAne, "", new { @class = "text-danger" })

        </div>

        <div class="form-check">

            <label class="form-check-label" for="busCase">Business Case</label>
            @Html.CheckBox("busCase", new { @class = "form-check-input" })

        </div>

        <div class="form-group" style="margin-top:20px">
            <div class="btngrupo">
                <input type="submit" value="Guardar" class="btn btn-default" />
                @Html.ActionLink("Ir al Flujo de Inversión", "CreateFIn", new { nroCo = Model.nroCorrelativo }, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
    }

    

</body>


</html>
<script>
    if ('@ViewBag.mensaje' !='') {
        alert('@ViewBag.mensaje');
    }
</script>


<script>
    var cboEje = document.getElementById("codEje");
    var cboGer = document.getElementById("codGer");

    cboEje.addEventListener("change", listaEje);
    cboGer.addEventListener("change", listaGerencia);

    listaEje();
    listaGerencia();

    function listaEje() {
        fetch("@Url.Content("~/Iniciativa/Requerimiento")" + "?cod=" + cboEje.value)
            .then(function (result) {

                if (result.ok) {
                    return result.json();
                }
            })
            .then(function (data) {
                console.log(data);
                var cbo = document.getElementById("codReq");
                cbo.innerHTML = "";
                data.forEach(function (element) {
                    let opt = document.createElement("option");
                    opt.appendChild(document.createTextNode(element.nomReq));
                    opt.value = element.codReq;

                    cbo.appendChild(opt);
                })
            })
    }

    function listaGerencia() {
        fetch("@Url.Content("~/Iniciativa/Jefatura")" + "?cod=" + cboGer.value)
            .then(function (result) {

                if (result.ok) {
                    return result.json();
                }
            })
            .then(function (data) {
                console.log(data);
                var cbo = document.getElementById("codJef");
                cbo.innerHTML = "";
                data.forEach(function (element) {
                    let opt = document.createElement("option");
                    opt.appendChild(document.createTextNode(element.nomJef));
                    opt.value = element.codJef;

                    cbo.appendChild(opt);
                })
            })
    }

</script>